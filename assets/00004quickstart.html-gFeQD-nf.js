import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,e as t}from"./app-G7VSIf0C.js";const e="/assets/1710507287437-idea_maven_setting-qBQbzlbc.png",p="/assets/1710507328633-idea_maven_origin_1-5EEnzXxc.png",i="/assets/1710507367329-idea_maven_origin_2-UKz687JE.png",l="/assets/1710507384776-idea_maven_origin_3-AP63bVVM.png",c="/assets/1710507404040-idea_maven_java-qqz1BmKp.png",o="/assets/1710507420710-idea_maven_web-rVEKE3Db.png",u="/assets/1710507439859-idea_maven_use_1-Qd8Hj5gu.png",r="/assets/1710507467094-idea_maven_use_2-BBSqhHWd.png",d={},v=t(`<p>Maven 工程一般分为两种，一种是 Java 工程，一种是 Web 工程。</p><p>我们可以通过手动创建 Maven 工程，也可以通过命令创建 Maven 工程，再或者我们可以通过 IDE 创建 Maven 工程。</p><h2 id="maven-工程目录" tabindex="-1"><a class="header-anchor" href="#maven-工程目录" aria-hidden="true">#</a> Maven 工程目录</h2><p>在介绍怎么创建工程前，先介绍 Maven 工程的目录结构，这是使用 Maven 必须遵守的约定。</p><ul><li><p>Java 工程</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>handmadeMavenProject/					# 工程名称
├── pom.xml								# 配置文件，用于管理依赖（有这个文件才算是一个 Maven 工程）
└── src									# 源码资源
    ├── main							# 主程序源码资源
    │   ├── java						# 主程序源码
    │   │   └── com
    │   │       └── ackerven
    │   │           └── Demo.java
    │   └── resources					# 主程序资源(框架，配置文件等)
    └── test							# 测试程序源码资源
        ├── java						# 测试程序源码
        │   └── com
        │       └── ackerven
        │           └── DemoTest.java
        └── resources					# 测试程序资源
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Web 工程</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>automadeWebProject/
├── pom.xml
└── src
    └── main
        ├── resources
        └── webapp
            ├── index.jsp
            └── WEB-INF
                └── web.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="手动创建-maven-程序" tabindex="-1"><a class="header-anchor" href="#手动创建-maven-程序" aria-hidden="true">#</a> 手动创建 Maven 程序</h2><ol><li><p>首先创建目录结构</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>project/
├── pom.xml
└── src
    ├── main
    │   ├── java
    │   └── resources
    └── test
        ├── java
        └── resources
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在 src 的 main/java 下创建一个类 Demo</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ackerven</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Hello &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在 src 的 test/java 下创建一个类 DemoTest，用于测试 Demo 类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ackerven</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Assert</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Demo</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;maven&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Hello maven&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行 <code>mvn test</code> 测试。</p></li></ol><h2 id="命令创建-maven-工程" tabindex="-1"><a class="header-anchor" href="#命令创建-maven-工程" aria-hidden="true">#</a> 命令创建 Maven 工程</h2><p>可以通过命令创建 Java 工程和 Web 工程。</p><p>在 <code>DgrougId</code> 填定位的 grougId，在 <code>DartifactId</code> 填定位的 artifactId，在 <code>Dversion</code> 填版本号</p><ul><li><p>Java 工程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn archetype:generate <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ackerven <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>automadeJavaProject <span class="token parameter variable">-DarchetypeArtifactId</span><span class="token operator">=</span>maven-archetype-quickstart <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">0.0</span>.1-snapshot <span class="token parameter variable">-DinteractiveMode</span><span class="token operator">=</span>false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Web 工程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn archetype:generate <span class="token parameter variable">-DgroupId</span><span class="token operator">=</span>com.ackerven <span class="token parameter variable">-DartifactId</span><span class="token operator">=</span>automadeWebProject  <span class="token parameter variable">-DarchetypeArtifactId</span><span class="token operator">=</span>maven-archetype-webapp <span class="token parameter variable">-Dversion</span><span class="token operator">=</span><span class="token number">0.0</span>.1-snapshot <span class="token parameter variable">-DinteractiveMode</span><span class="token operator">=</span>false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h2 id="idea-创建-maven-工程" tabindex="-1"><a class="header-anchor" href="#idea-创建-maven-工程" aria-hidden="true">#</a> IDEA 创建 Maven 工程</h2><p>创建 Maven 工程，需要先新建一个空项目，然后添加模块时选择添加Maven的模块。</p><h3 id="maven-的配置" tabindex="-1"><a class="header-anchor" href="#maven-的配置" aria-hidden="true">#</a> Maven 的配置</h3><ol><li><p>在 <code>File -&gt; Settings...</code> 里面搜索 Maven</p><figure><img src="`+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>③：这里可以设置自定义的 Maven 版本，默认是内置的 Maven</p><p>④：这里可以设置 Maven 使用的配置文件，如果这里改变，需要勾选 ⑤ 的 Override</p></li></ol><h3 id="创建原始-maven-工程" tabindex="-1"><a class="header-anchor" href="#创建原始-maven-工程" aria-hidden="true">#</a> 创建原始 Maven 工程</h3><ol><li><p>原始 Maven 工程是指不使用任何配置，直接创建的 Maven 工程。</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>①②③ 设置坐标，然后 Finish</p><figure><img src="'+i+'" alt="picture 3" tabindex="0" loading="lazy"><figcaption>picture 3</figcaption></figure></li><li><p>在模块设置里为文件夹做标记</p><p>注意：默认 test 文件夹下没有 resources，需要自己手动创建</p><figure><img src="'+l+'" alt="picture 4" tabindex="0" loading="lazy"><figcaption>picture 4</figcaption></figure></li><li><p>根据具体需要改写 pom.xml</p></li></ol><h3 id="创建-java-工程" tabindex="-1"><a class="header-anchor" href="#创建-java-工程" aria-hidden="true">#</a> 创建 Java 工程</h3><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="创建-web-工程" tabindex="-1"><a class="header-anchor" href="#创建-web-工程" aria-hidden="true">#</a> 创建 Web 工程</h3><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="maven-管理器的使用" tabindex="-1"><a class="header-anchor" href="#maven-管理器的使用" aria-hidden="true">#</a> Maven 管理器的使用</h3><p>Maven 管理器在 IDEA 的右边栏。</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>①：打开 Maven 管理器</p><p>②：双击执行 Maven 的 mvn 命令</p><p>③：Reload All Maven Projects</p><p>④：Generate Sources and Update Folders For All Projects</p><p>除了 ② 的方法执行 mvn 命令外，还可以配置 Configuration，尤其是在需要对代码进行 Debug 的时候，需要使用这种方式。</p><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="pom-xml-参考" tabindex="-1"><a class="header-anchor" href="#pom-xml-参考" aria-hidden="true">#</a> pom.xml 参考</h2><details class="hint-container details"><summary>参考示例</summary><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--  指定 pom 的模型版本--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--  打包方式--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>java03<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--  组织ID--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.floli<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--  项目ID--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>java03<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--  版本号--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--  设置工程依赖--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--    具体的依赖--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--      依赖坐标--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--  构建--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--    设置插件--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--      具体插件--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!--        插件坐标--&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,32),k=[v];function m(g,b){return a(),s("div",null,k)}const x=n(d,[["render",m],["__file","00004quickstart.html.vue"]]);export{x as default};
