import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as i,c as o,a as n,d as a,w as e,e as c,b as p}from"./app-G7VSIf0C.js";const u={},r=c(`<p>编程语言有很多，需要根据需求选择特定的语言。没有最好的语言，只有最合适的语言。</p><p>以下是一些分类标准：</p><ol><li><p>执行方式</p><ul><li><p>编译型</p><p>代码在运行之前需要通过编译器转换成机器代码。如 C、C++</p></li><li><p>解释型</p><p>代码由解析器逐行解析执行。如 Python、JavaScript</p></li></ul></li><li><p>数据类型</p><ul><li><p>强类型</p><p>变量的数据类型是严格定义的，不同类型的变量不能隐式转换，需要显式进行类型转换。如 Java</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> num1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">double</span> num2 <span class="token operator">=</span> <span class="token number">5.5</span><span class="token punctuation">;</span>

    <span class="token comment">// 这行代码会导致编译错误，因为C是强类型语言，不允许隐式类型转换</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Sum: %d\\n&quot;</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>弱类型</p><p>在某种程度上，允许数据类型之间的隐式转换。如 Python，JavaScript</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>num1 <span class="token operator">=</span> <span class="token number">10</span>
num2 <span class="token operator">=</span> <span class="token number">5.5</span>

<span class="token comment"># 在Python中，这是合法的，因为Python是一种弱类型语言，会自动进行类型转换</span>
<span class="token builtin">sum</span> <span class="token operator">=</span> num1 <span class="token operator">+</span> num2
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Sum:&quot;</span><span class="token punctuation">,</span> <span class="token builtin">sum</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>静态类型</p><p>变量的数据类型在编译时确定，并且不可更改。如 C、C++、Java</p></li><li><p>动态类型</p><p>变量的数据类型在运行时确定，可以在运行时更改其数据类型。如 Python，JavaScript</p></li></ul></li></ol><h2 id="资产" tabindex="-1"><a class="header-anchor" href="#资产" aria-hidden="true">#</a> 资产</h2>`,4);function d(m,k){const s=l("RouterLink");return i(),o("div",null,[r,n("ul",null,[n("li",null,[a(s,{to:"/language/markdown/"},{default:e(()=>[p("Markdown")]),_:1})]),n("li",null,[a(s,{to:"/language/java/"},{default:e(()=>[p("Java")]),_:1})])])])}const h=t(u,[["render",d],["__file","index.html.vue"]]);export{h as default};
