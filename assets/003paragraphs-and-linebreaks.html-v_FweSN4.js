import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as n,e as s}from"./app-G7VSIf0C.js";const l={},d=s(`<h2 id="段落" tabindex="-1"><a class="header-anchor" href="#段落" aria-hidden="true">#</a> 段落</h2><p>Markdown 的段落是一个块元素，使用一个或多个空白行分隔文本将产生一个段落。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Markdown is markup language.

It&#39;s easy to learn.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><blockquote><p>Markdown is markup language.</p><p>It&#39;s easy to learn.</p></blockquote><p>相邻的两行文本如果没有空白行分隔，在显示时换行符会被换成空格。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Markdown is markup language.
It&#39;s easy to learn.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><blockquote><p>Markdown is markup languge.<br> It&#39;s easy to learn.</p></blockquote><h2 id="换行" tabindex="-1"><a class="header-anchor" href="#换行" aria-hidden="true">#</a> 换行</h2><p>在 Markdown 中如果想让两行文本最终显示出来的是换行而不是一个新的段落，有两种方式：</p><ul><li><p>在第一行文本末尾添加两个或两个以上的空格然后换行输入第二行文本</p><p>这也称为<strong>结尾空格（trailing whitespace）</strong></p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Markdown is markup language.  
It&#39;s easy to learn.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><blockquote><p>Markdown is markup language.<br> It&#39;s easy to learn.</p></blockquote></li><li><p>使用 <code>&lt;br /&gt;</code> 标签</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Markdown is markup language.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
It&#39;s easy to learn.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><blockquote><p>Markdown is markup language.<br><br> It&#39;s easy to learn.</p></blockquote></li></ul><p>推荐使用 <code>&lt;br /&gt;</code> 标签而不是结尾空格，因为在一般的编辑器是没办法直接看到空白符的，某些句子末尾可能会不小心添加了空格。更重要的是，在其他一些 Markdown 的语法块中无法使用结尾空格来实现换行，只能使用 <code>&lt;br /&gt;</code> 标签。</p><div class="hint-container tip"><p class="hint-container-title">段落与换行的区别</p><ol><li><p>Markdown 中的段落对应 HTML 中的 <code>&lt;p&gt;</code> 标签，而换行对应 HTML 中的 <code>&lt;br /&gt;</code> 标签。</p></li><li><p>不同的网站可能对 <code>&lt;p&gt;</code> 和 <code>&lt;br /&gt;</code> 有不同的样式，这会导致最后呈现的效果会不一样</p></li><li><p>如果两行文本之间存在多个空白行，这两行文本将各自成为一个段落，且两个段落之间只有一个换行。如果想要两个段落之间相隔多行，可以在两个段落之间按需插入 <code>&lt;br /&gt;</code> 标签。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Markdown is markup language.

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>

It&#39;s easy to learn.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><blockquote><p>Markdown is markup language.</p><br><br><p>It&#39;s easy to learn.</p></blockquote></li></ol></div>`,14),i=[d];function r(t,o){return e(),n("div",null,i)}const u=a(l,[["render",r],["__file","003paragraphs-and-linebreaks.html.vue"]]);export{u as default};
