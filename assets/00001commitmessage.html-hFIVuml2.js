import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as d,c as n,a as e,b as a,d as i,e as l}from"./app-G7VSIf0C.js";const s={},c=l(`<p>目前，Angular 规范是业界内公认比较好一种规范，也是使用最广的写法。</p><p>基本格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;
&lt;BLANK LINE&gt;
&lt;body&gt;
&lt;BLANK LINE&gt;
&lt;footer&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里面包含三部分，分别是 Header、Body 和 Footer。</p><h2 id="header" tabindex="-1"><a class="header-anchor" href="#header" aria-hidden="true">#</a> Header</h2><p>Header 包含三部分，分别是 type，scope 和 subject。</p><table><thead><tr><th>字段</th><th>作用</th><th>必要性</th></tr></thead><tbody><tr><td>type</td><td>说明 Commit 的类别，只允许使用规定的值</td><td>必须</td></tr><tr><td>scope</td><td>说明 Commit 影响的范围</td><td>可选</td></tr><tr><td>subject</td><td>说明 Commit 的目的</td><td>必须</td></tr></tbody></table><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3><p>type 字段是<strong>必须</strong>的，用于说明 Commit 的类别，只允许使用规定的值。</p><p>具体规定了哪些值，请根据项目需要制定。以下是一些参考的值：</p><ul><li>feat：新功能（feature）</li><li>fix/to：修复 Bug <ul><li>fix：产生 diff 并修复此问题。适合于在一次提交内修复问题的 Commit</li><li>to：产生 diff 但还没修复问题。适合于修复修复某个问题时多次提交，但<strong>最终解决问题的提交需要使用 fix</strong></li></ul></li><li>docs：文档（documentation）</li><li>style：格式（不影响代码逻辑的变动，例如修改空格、格式缩进、补全缺失的分号）</li><li>refactor：重构（既不是新增功能，也不是修 Bug 的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li><li>revert：回滚版本</li></ul><hr><ul><li>perf：优化相关（性能，体验）</li><li>merge：代码合并</li><li>sync：同步主线或分支的 Bug</li><li>improvement：改进而没有添加新功能或修复错误</li><li>ci：与 CI/CD 有关的改动</li><li>release：发布新版本</li></ul><h3 id="scope" tabindex="-1"><a class="header-anchor" href="#scope" aria-hidden="true">#</a> scope</h3><p>scope 字段是<strong>可选</strong>的，用于说明 Commit 影响的范围。这个范围是自己定义的，可以是文件或其他。</p><p>比如数据层、服务层、控制层、视图层等。</p><p>如果有多个范围，可以使用 <code>*</code> 。</p><h3 id="subject" tabindex="-1"><a class="header-anchor" href="#subject" aria-hidden="true">#</a> subject</h3><p>subject 字段是<strong>必须</strong>的，用于说明 Commit 的目的。这个字段的要求如下：</p><ul><li>简短，最好不要超过 100 个字符</li><li>使用祈使句，第一人称现在时</li><li>以小写字母开头</li><li>结尾不加句号或其他标点符号</li></ul><h2 id="body" tabindex="-1"><a class="header-anchor" href="#body" aria-hidden="true">#</a> Body</h2><p>body 部分是<strong>可选</strong>的，用于详细描述本次 Commit 所做出的改动。一般用于说明代码变动的动机，以及变化的内容。</p><p>注意：使用第一人称现在时，比如使用 <code>change</code> 而不是 <code>changed</code> 或 <code>changes</code> 。</p><h2 id="footer" tabindex="-1"><a class="header-anchor" href="#footer" aria-hidden="true">#</a> Footer</h2><p>footer 部分是<strong>可选</strong>的，用于放一些说明。比如说明破坏性的提交 BREAKING CHANGE，参考链接，工单单号，关闭 issue 等。</p><h3 id="breaking-change" tabindex="-1"><a class="header-anchor" href="#breaking-change" aria-hidden="true">#</a> BREAKING CHANGE</h3><p>如果当前 Commit 有不兼容的提交，则需要在 footer 包含 <code>BREAKING CHANGE: description </code> 的描述。</p><h4 id="关闭-issue" tabindex="-1"><a class="header-anchor" href="#关闭-issue" aria-hidden="true">#</a> 关闭 issue</h4><p>如果当前 Commit 针对某个 issue，可以在 footer 字段关闭这个 issue。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Closes #1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以一次关闭多个 issue。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>Closes #1, #2, #3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><ul><li><p>revert</p><p>如果当前 Commit 用于说明撤销以前的 Commit，则必须以 <code>revert: </code> 开头，后面跟着被撤销 Commit 的 Header。</p><p>并在 Body 中第一句写上 <code>This revert commit &lt;hash&gt;</code> ，<code>&lt;hash&gt;</code> 是被撤销 Commit 的 Hash。</p></li><li><p>！</p><p>在 type 字段后面添加 <code>!</code> 字符，以进一步体现注意破坏性变更。当有 <code>!</code> 前缀时，正文或脚注内必须包含 <code>BREAKING CHANGE: description</code> 。</p></li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,35),h={href:"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit",target:"_blank",rel:"noopener noreferrer"},p={href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"},u={href:"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html",target:"_blank",rel:"noopener noreferrer"};function g(b,f){const t=o("ExternalLinkIcon");return d(),n("div",null,[c,e("ul",null,[e("li",null,[e("a",h,[a("angular/CONTRIBUTING.md at 22b96b96902e1a42ee8c5e807720424abad3082a · angular/angular"),i(t)])]),e("li",null,[e("a",m,[a("Git Commit Message Conventions - Google 文档"),i(t)])]),e("li",null,[e("a",p,[a("约定式提交"),i(t)])]),e("li",null,[e("a",u,[a("Commit message 和 Change log 编写指南 - 阮一峰的网络日志"),i(t)])])])])}const C=r(s,[["render",g],["__file","00001commitmessage.html.vue"]]);export{C as default};
