import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as l,c as i,a as e,b as n,d as s,e as o}from"./app-G7VSIf0C.js";const r={},d=o(`<p>Markdown 有三种链接，分别是行内式、参考式和自动链接。</p><p>链接会被解析成 HTML 的 <code>&lt;a&gt;</code> 标签，形式为 <code>&lt;a href=&quot;URL&quot; title=&quot;Title&quot;&gt;Name&lt;/a&gt;</code>。</p><h2 id="行内式链接" tabindex="-1"><a class="header-anchor" href="#行内式链接" aria-hidden="true">#</a> 行内式链接</h2><p>行内式链接的语法形式为 <code>[Name](URL &quot;Title&quot;)</code>。<code>&quot;Title&quot;</code> 部分可以省略。</p><p>行内式链接是一个行内元素。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>省略 <span class="token code-snippet code keyword">\`Title\`</span> 的链接：

Welcome to visit my page <span class="token url">[<span class="token content">Ackerven</span>](<span class="token url">https://ackerven.com/</span>)</span>

带有 <span class="token code-snippet code keyword">\`Title\`</span> 的链接可以在鼠标移到链接上方时显示你定义的 <span class="token code-snippet code keyword">\`Title\`</span>：

Welcome to visit my page <span class="token url">[<span class="token content">Ackerven</span>](<span class="token url">https://ackerven.com/</span> <span class="token string">&quot;Awesome page&quot;</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><p>省略 <code>Title</code> 的行内式链接：</p>`,8),p={href:"https://ackerven.com/",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,[n("带有 "),e("code",null,"Title"),n(" 的行内式链接可以在鼠标移到链接上方时显示你定义的 "),e("code",null,"Title"),n("：")],-1),m={href:"https://ackerven.com/",title:"Awesome page",target:"_blank",rel:"noopener noreferrer"},v=o(`<h2 id="参考式链接" tabindex="-1"><a class="header-anchor" href="#参考式链接" aria-hidden="true">#</a> 参考式链接</h2><p>参考式链接由两部分组成。</p><p>第一部分格式为 <code>[Name][Label]</code>，<code>[Label]</code> 可以使用字母、数字、空格或标点符号，而且不区分大小写，但不能完全是空格。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url">[<span class="token content">My Blog</span>][<span class="token variable">blog</span>]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二部分格式为 <code>[Label]: URL &quot;Title&quot;</code></p><ul><li><code>URL</code> 可以使用 <code>&lt;&gt;</code> 包括起来</li><li><code>&quot;Title&quot;</code> 不是必须的，需要使用<code>&#39;&#39;</code>、<code>&quot;&quot;</code> 或 <code>()</code> 包括起来。</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">blog</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://blog.ackerven.com/ <span class="token string">&quot;Awesome blog&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二部分可以放到文章任意的位置。</p><p>两部分都完成后的效果：</p>`,9),k={href:"https://blog.ackerven.com/",title:"Awesome blog",target:"_blank",rel:"noopener noreferrer"},h=o(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>参考式第二部分需要使用空白行与其他元素分隔。</p></div><h2 id="自动链接" tabindex="-1"><a class="header-anchor" href="#自动链接" aria-hidden="true">#</a> 自动链接</h2><p>自动链接的语法为 <code>&lt;URL&gt;</code>，<code>URL</code> 部分只能是一个 URL 或 email 地址。</p><p>自动链接是一个行内元素。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>&lt;https://ackerven.com&gt;

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ackerven@gmail.com</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p>`,6),g={href:"https://ackerven.com",target:"_blank",rel:"noopener noreferrer"},b=o(`<p><a href="mailto:ackerven@gmail.com">ackerven@gmail.com</a></p><h2 id="带有样式的链接" tabindex="-1"><a class="header-anchor" href="#带有样式的链接" aria-hidden="true">#</a> 带有样式的链接</h2><p>你可以为链接使用<em><strong>强调</strong></em>和代码片段的语法。</p><p><strong>强调语法与代码片段语法略微不同。</strong></p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>强调一个链接：

Welcome to visit my page <span class="token bold"><span class="token punctuation">**</span><span class="token content"><span class="token italic"><span class="token punctuation">*</span><span class="token content"><span class="token url">[<span class="token content">Ackerven</span>](<span class="token url">https://ackerven.com/</span>)</span></span><span class="token punctuation">*</span></span></span><span class="token punctuation">**</span></span>

一个为链接的代码片段：

Welcome to visit my page <span class="token url">[<span class="token content"><span class="token code-snippet code keyword">\`Ackerven\`</span></span>](<span class="token url">https://ackerven.com/</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><p>强调一个链接：</p>`,7),_={href:"https://ackerven.com/",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,"一个为链接的代码片段：",-1),w={href:"https://ackerven.com/",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"Ackerven",-1);function x(y,L){const a=c("ExternalLinkIcon");return l(),i("div",null,[d,e("p",null,[n("Welcome to visit my page "),e("a",p,[n("Ackerven"),s(a)])]),u,e("p",null,[n("Welcome to visit my page "),e("a",m,[n("Ackerven"),s(a)])]),v,e("p",null,[e("a",k,[n("My Blog"),s(a)])]),h,e("p",null,[e("a",g,[n("https://ackerven.com"),s(a)])]),b,e("p",null,[n("Welcome to visit my page "),e("em",null,[e("strong",null,[e("a",_,[n("Ackerven"),s(a)])])])]),f,e("p",null,[n("Welcome to visit my page "),e("a",w,[q,s(a)])])])}const W=t(r,[["render",x],["__file","008links.html.vue"]]);export{W as default};
