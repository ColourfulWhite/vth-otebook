import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as p,c as g,a as n,b as e,d as l,w as s,e as t}from"./app-G7VSIf0C.js";const b={},h=n("h2",{id:"nginx-版本",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nginx-版本","aria-hidden":"true"},"#"),e(" Nginx 版本")],-1),v={href:"https://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>Nginx 官方网站的下载页面提供了两种版本，分别是 Mainline version 和 Stable version。</p><ul><li>Mainline version：开发版本，包含了最新的一些功能，但不稳定</li><li>Stable version：稳定版本</li></ul><p>建议在生产环境使用 Stable version。</p><h2 id="系统准备" tabindex="-1"><a class="header-anchor" href="#系统准备" aria-hidden="true">#</a> 系统准备</h2><h3 id="内核" tabindex="-1"><a class="header-anchor" href="#内核" aria-hidden="true">#</a> 内核</h3><p>Nginx 使用 epoll 模型处理高并发的访问，确保系统的内核是 2.6 及以上版本。可以使用 <code>uname -a</code> 查看系统的内核版本。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">uname</span> <span class="token parameter variable">-a</span>
<span class="token comment"># 当前内核版本为 5.15.0，架构为 aarch64 </span>
Linux raspberrypi <span class="token number">5.15</span>.0-1044-raspi <span class="token comment">#47-Ubuntu SMP PREEMPT Tue Nov 21 11:33:46 UTC 2023 aarch64 aarch64 aarch64 GNU/Linux</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙" aria-hidden="true">#</a> 防火墙</h3><p>由于 Nginx 提供网络访问服务，所以需要在防火墙配置规则，对 Nginx 的流量进行放行。</p><p>不同的系统使用到防火墙不同，Ubuntu 22.04 使用到是 UFW 防火墙，可以通过 <code>sudo ufw allow &#39;Nginx Full&#39;</code> 配置，允许HTTP（端口 80）和 HTTPS（端口 443）流量，如果使用了其他端口，需要手动把规则加入到防火墙中。</p><p>建议在学习的过程中，把防火墙停止运行。</p>`,11),x=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(` systemctl stop ufw
`),n("span",{class:"token function"},"sudo"),e(` systemctl disable ufw
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),k=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(` systemctl stop firewalld
`),n("span",{class:"token function"},"sudo"),e(` systemctl disable firewalld
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("h3",{id:"selinux",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#selinux","aria-hidden":"true"},"#"),e(" SELinux")],-1),f=n("p",null,"SELinux（Security-Enhanced Linux）是一个 Linux 安全模块，它提供了强大的访问控制机制，用于加强 Linux 系统的安全性，在基于 Red Hat 的发行版系统，例如 Red Hat Enterprise Linux (RHEL)、CentOS 和 Fedora，一般会默认启动 SELinux。除了 SELinux，类似的安全模块还有 Apparmor， Ubuntu 就是使用 Apparmor 作为系统默认的安全模块。",-1),A=n("p",null,"这些安全模块虽然安全，但会让 Nginx 在使用过程中增加额外的配置，建议在学习 Nginx 时关掉。",-1),N=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(` systemctl stop apparmor
`),n("span",{class:"token function"},"sudo"),e(` systemctl disable apparmor
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("p",null,[e("把 "),n("code",null,"/etc/selinux/config"),e(" 的 "),n("code",null,"SELINUX"),e(" 配置项设置成 "),n("code",null,"disable"),e("，并重启系统即可。")],-1),S=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"vim"),e(` /etc/selinux/config
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"reboot"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("h2",{id:"使用包管理器安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用包管理器安装","aria-hidden":"true"},"#"),e(" 使用包管理器安装")],-1),P=n("p",null,"Nginx 官方提供了一些常见的 Linux 发行版本的预编译包，可以通过在包管理器添加 Nginx 的仓库，并通过包管理器对 Nginx 进行安装。",-1),C={href:"https://nginx.org/en/linux_packages.html",target:"_blank",rel:"noopener noreferrer"},H=n("p",null,[e("安装完成后， 使用 "),n("code",null,"nginx"),e(" 启动 Nginx，使用 "),n("code",null,"whereis nginx"),e(" 查看 Nginx 安装的位置。")],-1),L=n("h3",{id:"ubuntu",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ubuntu","aria-hidden":"true"},"#"),e(" Ubuntu")],-1),w=t(`<li><p>安装使用到的一些工具</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">curl</span> gnupg2 ca-certificates lsb-release ubuntu-keyring
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>导入 Nginx 官方的签名信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> https://nginx.org/keys/nginx_signing.key <span class="token operator">|</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token punctuation">\\</span>
    <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /usr/share/keyrings/nginx-archive-keyring.gpg <span class="token operator">&gt;</span>/dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证签名信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gpg --dry-run <span class="token parameter variable">--quiet</span> --no-keyring <span class="token parameter variable">--import</span> --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确保输出如下所示，如果不是，重新进行第 2 步。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pub   rsa2048 2011-08-19 [SC] [expires: 2024-06-14]
      573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62
uid                      nginx signing key &lt;signing-key@nginx.com&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,3),E=n("p",null,"导入 Nginx 官方的 apt 源",-1),U=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token string"},[e(`"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\
http://nginx.org/packages/ubuntu `),n("span",{class:"token variable"},[n("span",{class:"token variable"},"`"),e("lsb_release "),n("span",{class:"token parameter variable"},"-cs"),n("span",{class:"token variable"},"`")]),e(' nginx"')]),e(),n("span",{class:"token punctuation"},"\\"),e(`
    `),n("span",{class:"token operator"},"|"),e(),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"tee"),e(` /etc/apt/sources.list.d/nginx.list
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token string"},[e(`"deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\
http://nginx.org/packages/mainline/ubuntu `),n("span",{class:"token variable"},[n("span",{class:"token variable"},"`"),e("lsb_release "),n("span",{class:"token parameter variable"},"-cs"),n("span",{class:"token variable"},"`")]),e(' nginx"')]),e(),n("span",{class:"token punctuation"},"\\"),e(`
    `),n("span",{class:"token operator"},"|"),e(),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"tee"),e(` /etc/apt/sources.list.d/nginx.list
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=t(`<li><p>设置优先使用官方的 apt 源而不是系统的 apt 源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;Package: *<span class="token entity" title="\\n">\\n</span>Pin: origin nginx.org<span class="token entity" title="\\n">\\n</span>Pin: release o=nginx<span class="token entity" title="\\n">\\n</span>Pin-Priority: 900<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token punctuation">\\</span>
    <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/preferences.d/99nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装 Nginx</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),B=t(`<h3 id="centos" tabindex="-1"><a class="header-anchor" href="#centos" aria-hidden="true">#</a> CentOS</h3><ol><li><p>安装使用到的工具</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> yum-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>设置 yum 源</p><p>在 <code>/etc/yum.repos.d/</code> 下面新建一个 <code>nginx.repo</code> 文件，添加以下内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[nginx-stable]
name=nginx stable repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=1
enabled=1
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true

[nginx-mainline]
name=nginx mainline repo
baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/
gpgcheck=1
enabled=0
gpgkey=https://nginx.org/keys/nginx_signing.key
module_hotfixes=true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装 Nginx</p><p>默认使用的是 Stable 版本，如果需要使用 Mainline 版本，执行 <code>sudo yum-config-manager --enable nginx-mainline</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="编译源码安装" tabindex="-1"><a class="header-anchor" href="#编译源码安装" aria-hidden="true">#</a> 编译源码安装</h2><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h3>`,4),M={href:"https://nginx.org/download/",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,".zip",-1),$=n("p",null,"在编译 Nginx 的源码之前，需要准备编译的环境，确保系统安装了 GCC、PCRE、zlib、OpenSSL。",-1),F=n("ul",null,[n("li",null,"GCC：Nginx 使用 C 语言编写，需要使用 GCC 对源码进行编译"),n("li",null,"PCRE：PCRE(perl Compatible Regular Expression) 是兼容正则表达式库，为 Nginx 的 Rewrite 模块 和 HTTP 核心模块提供正则表达式的支持"),n("li",null,"zlib：zlib 库为 Nginx 提供 gzip 等压缩算法的支持"),n("li",null,"OpenSSL：OpenSSL 为 Nginx 实现 HTTPS 通信所需的加密和安全功能提供支持")],-1),q=n("p",null,"安装这些软件可以使用系统自带的包管理器：",-1),D=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt"),e(),n("span",{class:"token function"},"install"),e(` build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),G=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(" yum "),n("span",{class:"token function"},"install"),e(` gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),I=n("p",null,"安装完成后查看是否安装成功：",-1),V=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[e("dpkg-query "),n("span",{class:"token parameter variable"},"-l"),e(" gcc "),n("span",{class:"token function"},"make"),e(` libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),W=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"rpm"),e(),n("span",{class:"token parameter variable"},"-qa"),e(" gcc "),n("span",{class:"token function"},"make"),e(` pcre pcre-devel zlib zlib-devel openssl openssl-devel
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),X=n("h3",{id:"编译安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#编译安装","aria-hidden":"true"},"#"),e(" 编译安装")],-1),j={href:"https://nginx.org/en/docs/configure.html",target:"_blank",rel:"noopener noreferrer"},J=t(`<p>下载 Nginx 的源码，并进行解压，并按以下步骤进行编译安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxf</span> nginx-1.24.0.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),K=t(`<li><p>使用 <code>configure</code> 配置 Makefile</p><p>在解压后的目录中，使用 <code>configure</code> 程序来生成编译时用到的 Makefile 文件。执行 <code>./configure --help</code> 可以查看可配置的编译参数。这些参数大致可以分为三类：</p><ul><li>PATH 类：这类配置用于配置程序的一些路径</li><li>with 类：这类配置用于控制模块加入到编译 Nginx 的过程</li><li>without 类：这类配置用于控制模块不加入到编译 Nginx 的过程</li></ul><p>对于 PATH 类，常见的配置项作用如下：</p><table><thead><tr><th>配置项</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>--prefix=PATH</td><td>Nginx 的安装目录</td><td>/usr/local/nginx/</td></tr><tr><td>--sbin-path=PATH</td><td>可执行文件 nginx 的路径</td><td>&lt;prefix&gt;/sbin/nginx</td></tr><tr><td>--modules-path=PATH</td><td>Nginx 动态模块安装目录</td><td>&lt;prefix&gt;/modules/</td></tr><tr><td>--conf-path=PATH</td><td>配置文件 nginx.conf 的路径</td><td>&lt;prefix&gt;/conf/nginx.conf</td></tr><tr><td>--error-log-path=PATH</td><td>错误日志文件的路径</td><td>&lt;prefix&gt;/logs/error.log</td></tr><tr><td>--http-log-path=PATH</td><td>访问日志文件的路径</td><td>&lt;prefix&gt;/logs/access.log</td></tr><tr><td>--pid-path=PATH</td><td>Nginx 启动后进程 ID 的文件路径</td><td>&lt;prefix&gt;/logs/nginx.pid</td></tr><tr><td>--lock-path=PATH</td><td>Nginx 锁文件的路径</td><td>&lt;prefix&gt;/logs/nginx.lock</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/nginx <span class="token punctuation">\\</span>
--sbin-path<span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token punctuation">\\</span>
--modules-path<span class="token operator">=</span>/usr/local/nginx/modules <span class="token punctuation">\\</span>
--conf-path<span class="token operator">=</span>/usr/local/nginx/conf/nginx.conf <span class="token punctuation">\\</span>
--error-log-path<span class="token operator">=</span>/usr/local/nginx/logs/error.log <span class="token punctuation">\\</span>
--http-log-path<span class="token operator">=</span>/usr/local/nginx/logs/access.log <span class="token punctuation">\\</span>
--pid-path<span class="token operator">=</span>/usr/local/nginx/logs/nginx.pid <span class="token punctuation">\\</span>
--lock-path<span class="token operator">=</span>/usr/local/nginx/logs/nginx.lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行 <code>make</code> 进行编译</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>执行 <code>make install</code> 进行安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>启动 Nginx</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/nginx/sbin/
./nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,4),Q=n("p",null,"添加到环境变量",-1),Y=n("p",null,[e("通过编译安装的 Nginx，每次执行 Nginx 的命令时都需要进入到 Nginx 的可执行文件目录或者输入绝对路径，可以将这个目录加入到环境变量或者在 "),n("code",null,"/usr/local/bin"),e(" 中为 Nginx 添加一个符号链接。"),n("strong",null,[e("注意：需要根据实际安装路径填写 Nginx 的可执行文件所在的路径，也就是编译选项中 "),n("code",null,"--sbin-path"),e(" 的值！")])],-1),Z=n("p",null,"修改环境变量",-1),nn=n("p",null,[e("在 "),n("code",null,"~/.bashrc"),e(" 最后加入 "),n("code",null,"export PATH=$PATH:/usr/local/nginx/sbin"),e("，并执行 "),n("code",null,"source ~/.bashrc"),e(" 使其生效。")],-1),en=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token string"},"'export PATH=$PATH:/usr/local/nginx/sbin'"),e(),n("span",{class:"token operator"},">>"),e(` ~/.bashrc
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),sn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"source"),e(` ~/.bashrc
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),an=n("p",null,[e("在 "),n("code",null,"/etc/profile"),e(" 最后加入 "),n("code",null,"export PATH=$PATH:/usr/local/nginx/sbin"),e("，并执行 "),n("code",null,"source /etc/profile"),e(" 使其生效。")],-1),ln=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token string"},"'export PATH=$PATH:/usr/local/nginx/sbin'"),e(),n("span",{class:"token operator"},">>"),e(` /etc/profile
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),tn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"source"),e(` /etc/profile
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),dn=t(`<li><p>添加符号链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/nginx/sbin/nginx /usr/local/bin/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),cn=n("h2",{id:"卸载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#卸载","aria-hidden":"true"},"#"),e(" 卸载")],-1),on=n("p",null,[e("卸载 Nginx 之前需要先停止，执行 "),n("code",null,"nginx -s stop"),e(" 停止运行 Nginx。")],-1),rn=n("h3",{id:"使用包管理器安装方式的卸载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用包管理器安装方式的卸载","aria-hidden":"true"},"#"),e(" 使用包管理器安装方式的卸载")],-1),un=n("p",null,"只卸载 Nginx：",-1),pn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt"),e(` remove nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),gn=n("p",null,"卸载并删除相关的配置文件：",-1),bn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt"),e(` purge nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),hn=n("p",null,"只卸载 Nginx：",-1),vn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(` yum remove nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),mn=n("p",null,"卸载并删除相关的配置文件：",-1),xn=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"sudo"),e(` yum erase nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),kn=n("h3",{id:"编译安装方式的卸载",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#编译安装方式的卸载","aria-hidden":"true"},"#"),e(" 编译安装方式的卸载")],-1),_n=n("p",null,[e("直接删除编译安装 Nginx 时 "),n("code",null,"--prefix"),e(" 目录下所有的内容，并到编译安装的目录执行 "),n("code",null,"make clean"),e(" 清理编译生成的文件。")],-1);function fn(An,Nn){const d=r("ExternalLinkIcon"),c=r("CodeTabs"),o=r("Tabs");return p(),g("div",null,[h,n("p",null,[e("Nginx 官方网站下载页面："),n("a",v,[e("https://nginx.org/en/download.html"),l(d)])]),m,l(c,{id:"46",data:[{id:"Ubuntu"},{id:"CentOS"}],"tab-id":"stopfilewall"},{title0:s(({value:a,isActive:i})=>[e("Ubuntu")]),title1:s(({value:a,isActive:i})=>[e("CentOS")]),tab0:s(({value:a,isActive:i})=>[x]),tab1:s(({value:a,isActive:i})=>[k]),_:1}),_,f,A,l(o,{id:"63",data:[{id:"Apparmor"},{id:"SELinux"}],"tab-id":"security"},{title0:s(({value:a,isActive:i})=>[e("Apparmor")]),title1:s(({value:a,isActive:i})=>[e("SELinux")]),tab0:s(({value:a,isActive:i})=>[N]),tab1:s(({value:a,isActive:i})=>[y,S]),_:1}),T,P,n("p",null,[e("具体参考："),n("a",C,[e("https://nginx.org/en/linux_packages.html"),l(d)])]),H,L,n("ol",null,[w,n("li",null,[E,l(c,{id:"116",data:[{id:"Stable"},{id:"Mainline"}],"tab-id":"ubuntu_apt_version"},{title0:s(({value:a,isActive:i})=>[e("Stable")]),title1:s(({value:a,isActive:i})=>[e("Mainline")]),tab0:s(({value:a,isActive:i})=>[U]),tab1:s(({value:a,isActive:i})=>[z]),_:1})]),O]),B,n("p",null,[e("Nginx 的源码可以在官方的下载页面找到，但可能版本不全，可以在 "),n("a",M,[e("https://nginx.org/download/"),l(d)]),e(" 页面找到 Nginx 所有版本的源码，其中以 "),R,e(" 结尾的是适用于 Windows 系统的源码。")]),$,F,q,l(c,{id:"204",data:[{id:"Ubuntu"},{id:"CentOS"}],"tab-id":"env"},{title0:s(({value:a,isActive:i})=>[e("Ubuntu")]),title1:s(({value:a,isActive:i})=>[e("CentOS")]),tab0:s(({value:a,isActive:i})=>[D]),tab1:s(({value:a,isActive:i})=>[G]),_:1}),I,l(c,{id:"215",data:[{id:"Ubuntu"},{id:"CentOS"}],"tab-id":"env"},{title0:s(({value:a,isActive:i})=>[e("Ubuntu")]),title1:s(({value:a,isActive:i})=>[e("CentOS")]),tab0:s(({value:a,isActive:i})=>[V]),tab1:s(({value:a,isActive:i})=>[W]),_:1}),X,n("p",null,[e("官方文档页面："),n("a",j,[e("https://nginx.org/en/docs/configure.html"),l(d)])]),J,n("ol",null,[K,n("li",null,[Q,Y,n("ul",null,[n("li",null,[Z,l(o,{id:"398",data:[{id:"当前用户"},{id:"全部用户"}],"tab-id":"global"},{title0:s(({value:a,isActive:i})=>[e("当前用户")]),title1:s(({value:a,isActive:i})=>[e("全部用户")]),tab0:s(({value:a,isActive:i})=>[nn,en,sn]),tab1:s(({value:a,isActive:i})=>[an,ln,tn]),_:1})]),dn])])]),cn,on,rn,l(o,{id:"433",data:[{id:"Ubuntu"},{id:"CentOS"}],"tab-id":"uninstall"},{title0:s(({value:a,isActive:i})=>[e("Ubuntu")]),title1:s(({value:a,isActive:i})=>[e("CentOS")]),tab0:s(({value:a,isActive:i})=>[un,pn,gn,bn]),tab1:s(({value:a,isActive:i})=>[hn,vn,mn,xn]),_:1}),kn,_n])}const Tn=u(b,[["render",fn],["__file","0002install.html.vue"]]);export{Tn as default};
