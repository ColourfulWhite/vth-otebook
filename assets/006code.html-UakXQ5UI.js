import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c as t,e as o}from"./app-G7VSIf0C.js";const c={},n=o('<h2 id="代码片段" tabindex="-1"><a class="header-anchor" href="#代码片段" aria-hidden="true">#</a> 代码片段</h2><p>Markdown 中使用反引号 <code>`</code> 包裹需要表示为代码片段的文本。</p><p>代码片段是一个行内元素。</p><table><thead><tr><th>语法</th><th>HTML</th><th>预览</th></tr></thead><tbody><tr><td><code>I `love` you.</code></td><td><code>I &lt;code&gt;love&lt;/code&gt; you.</code></td><td>I <code>love</code> you.</td></tr></tbody></table><p>如果文本中含有反引号 <code>`</code> 但需要将其表示为代码片段，需要使用两个反引号 <code>``</code> 包裹文本。</p><p><strong>注意：如果文本含有两个连续的反引号 <code>``</code>，仍使用一个反引号 <code>`</code> 包裹文本。</strong></p><table><thead><tr><th>语法</th><th>HTML</th><th>预览</th></tr></thead><tbody><tr><td><code>`` ` ``</code></td><td><code>&lt;code&gt;`&lt;/code&gt;</code></td><td><code>`</code></td></tr><tr><td><code>` `` `</code></td><td><code>&lt;code&gt;``&lt;/code&gt;</code></td><td><code>``</code></td></tr><tr><td><code>``Use ` in markdown.``</code></td><td><code>&lt;code&gt;Use ` in markdown.&lt;/code&gt;</code></td><td><code>Use ` in markdown.</code></td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果文本以一个或一个以上的空格字符开头和结尾，但不是完全由空格字符组成时，解析后只会保留一个空格。</p><p>保留一个空格可以保证如果文本只含有反引号 <code>`</code> 时不会与包裹文本的反引号冲突。</p></div><h2 id="代码块" tabindex="-1"><a class="header-anchor" href="#代码块" aria-hidden="true">#</a> 代码块</h2><p>Markdown 会把缩进四个空格或一个 Tab 键的行解析成代码块。</p><p>如果有多个连续缩进四个空格或一个 Tab 键的行，会解析成一个代码块，直到遇到一个不是缩进四个空格或一个 Tab 键的行（空白行除外）。</p><p>代码块是一个块元素。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>    <span class="token title important"><span class="token punctuation">#</span>include&lt;stdio.h&gt;</span>\n\n<span class="token code keyword">    int main() {\n        return 0;\n    }</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果：</p><pre><code>#include&lt;stdio.h&gt;\n\nint main() {\n    return 0;\n}\n</code></pre><div class="hint-container tip"><p class="hint-container-title">提示</p><p>几乎所有的 Markdown 应用程序都支持使用三个反引号 <code>```</code> 来创建代码块并指定语言进行高亮显示。</p><p>所以强烈推荐使用 <code>```</code> 而不是空格来创建代码块。</p></div>',16),a=[n];function i(r,s){return d(),t("div",null,a)}const h=e(c,[["render",i],["__file","006code.html.vue"]]);export{h as default};
