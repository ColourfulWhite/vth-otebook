import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o,c as i,a,b as n,d as t,w as u,e as s}from"./app-G7VSIf0C.js";const d="/assets/1710506409662-core_frame-kkR-d585.png",r="/assets/1710506485663-path_first-mW9ehEZc.png",g="/assets/1710506485663-path_first-mW9ehEZc.png",k={},v=s('<h2 id="maven-框架" tabindex="-1"><a class="header-anchor" href="#maven-框架" aria-hidden="true">#</a> Maven 框架</h2><figure><img src="'+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="约定的目录结构" tabindex="-1"><a class="header-anchor" href="#约定的目录结构" aria-hidden="true">#</a> 约定的目录结构</h2><p>Maven 统一了开发结构，使用 Maven 时需要遵守约定的目录结构。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>project/	# 工程名称
├── pom.xml	# 配置文件
└── src		# 源码资源
    ├── main	# 主程序源码及资源
    │   ├── java	# 主程序源码
    │   └── resources	# 主程序资源
    └── test	# 测试程序源码及资源
        ├── java	# 测试程序源码
        └── resources	# 测试程序资源
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 Web 工程，在 main 目录下还会有一个 webapp 目录。</p><p>资源可能是一些配置文件，图片等。</p><h2 id="常用的-maven-命令" tabindex="-1"><a class="header-anchor" href="#常用的-maven-命令" aria-hidden="true">#</a> 常用的 Maven 命令</h2><table><thead><tr><th>命令</th><th>作用</th><th>描述</th></tr></thead><tbody><tr><td><code>mvn clean</code></td><td>清理</td><td>将以前编译的旧的 class 文件清理</td></tr><tr><td><code>mvn compile</code></td><td>编译主程序</td><td>将主程序的 Java 源代码编译成 class 文件</td></tr><tr><td><code>mvn test-compile</code></td><td>编译测试程序</td><td>将测试程序的 Java 源代码编译成 class 文件</td></tr><tr><td><code>mvn test</code></td><td>测试</td><td>自动测试（自动调用测试程序），并报告测试程序执行的结果</td></tr><tr><td><code>mvn package</code></td><td>打包</td><td>Java 工程打成 jar 包，Web 工程打成 war 包</td></tr><tr><td><code>mvn install</code></td><td>安装</td><td>将打包得到的文件复制到仓库的指定位置</td></tr><tr><td><code>mvn site</code></td><td>生成站点</td><td>-</td></tr><tr><td><code>mvn deploy</code></td><td>部署</td><td>将打包得到的文件复制到私服</td></tr></tbody></table><h2 id="pom-xml" tabindex="-1"><a class="header-anchor" href="#pom-xml" aria-hidden="true">#</a> pom.xml</h2><p>pom.xml 文件是 Maven 工程的核心配置文件。</p><h2 id="仓库" tabindex="-1"><a class="header-anchor" href="#仓库" aria-hidden="true">#</a> 仓库</h2>`,12),m={href:"https://mvnrepository.com/",target:"_blank",rel:"noopener noreferrer"},h=s('<p>仓库里面保存着资源，包括以下几个方面：</p><ul><li>Maven 自身需要的插件</li><li>第三方框架或工具的 jar 包</li><li>我们自己开发的 Maven 工程</li></ul><p>仓库分为本地仓库和远程仓库。</p><h3 id="本地仓库" tabindex="-1"><a class="header-anchor" href="#本地仓库" aria-hidden="true">#</a> 本地仓库</h3><p>本地仓库就是当前电脑部署的仓库目录，为当前电脑所有的 Maven 工程服务。</p><p>本地仓库的默认位置在 <code>${user.home}/.m2/repository</code>。<code>${user.home}</code> 指的是当前用户的 Home 目录。</p>',6),b=s(`<h3 id="远程仓库" tabindex="-1"><a class="header-anchor" href="#远程仓库" aria-hidden="true">#</a> 远程仓库</h3><p>远程仓库分为私服，中央仓库，镜像仓库。</p><ul><li>私服 ( Nexus )：公司或个人搭建在局域网中，为局域网内所有 Maven 工程服务。</li><li>中央仓库：搭建在 Internet 中，为全世界所有的 Maven 工程服务，目前由 Maven 团队维护。</li><li>镜像仓库：克隆中央仓库，用于提高访问速度。</li></ul><p>Maven 需要使用一些外部资源时，首先会去本地仓库找，如果找不到，就会去私服找。如果私服也没有，就会去中央仓库找。</p><h2 id="坐标" tabindex="-1"><a class="header-anchor" href="#坐标" aria-hidden="true">#</a> 坐标</h2><p>Maven 使用三个向量在仓库中唯一定位一个 Maven 工程。这三个向量称为坐标。</p><p>​ ① grougId：组织名称，通常是公司或组织的域名倒叙加上项目名称</p><p>​ ② artifactId：模块名</p><p>​ ③ version：版本号</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.floli.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>helloworld<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Maven工程的坐标与资源在仓库中的路径是一致的。</p><p>上面的例子中，在仓库对应的路径是 <code>org/floli/java/helloworld/1.0/helloworld-1.0.jar</code>。</p><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h2><p>依赖是指当前项目运行所需的 jar 包，一个项目可以有多个依赖。</p><p>通过修改项目的 pom.xml 里面的 <code>&lt;dependencies&gt;</code> 标签配置依赖，每一个依赖写一个 <code>&lt;dependency&gt;</code> 子标签。</p><p>格式：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--设置工程依赖--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--具体的依赖--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--依赖坐标--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="范围" tabindex="-1"><a class="header-anchor" href="#范围" aria-hidden="true">#</a> 范围</h3><p>通过 <code>&lt;dependency&gt;</code> 标签的子标签 <code>&lt;scope&gt;</code> 指定依赖的作用范围。</p><p>作用范围主要有三种：</p><ul><li>主程序有效（main 文件夹范围）</li><li>测试程序有效（test 文件夹范围）</li><li>是否参与打包（package 命令范围）</li></ul><table><thead><tr><th>scope</th><th>主程序</th><th>测试程序</th><th>打包</th><th>典例</th></tr></thead><tbody><tr><td>compile（默认）</td><td>√</td><td>√</td><td>√</td><td>log4j</td></tr><tr><td>test</td><td></td><td>√</td><td></td><td>junit</td></tr><tr><td>provided</td><td>√</td><td>√</td><td></td><td>servlet-api</td></tr><tr><td>runtime</td><td></td><td></td><td>√</td><td>jdbc</td></tr></tbody></table><p>范围的传递性：</p><table><thead><tr><th>间接依赖|直接依赖</th><th>compile</th><th>test</th><th>provided</th><th>runtime</th></tr></thead><tbody><tr><td>compile</td><td>compile</td><td>test</td><td>provided</td><td>runtime</td></tr><tr><td>test</td><td></td><td></td><td></td><td></td></tr><tr><td>provided</td><td></td><td></td><td></td><td></td></tr><tr><td>runtime</td><td>runtime</td><td>test</td><td>provided</td><td>runtime</td></tr></tbody></table><h3 id="依赖传递" tabindex="-1"><a class="header-anchor" href="#依赖传递" aria-hidden="true">#</a> 依赖传递</h3><p>依赖具有传递性。按照依赖方式可以分为直接依赖和间接依赖。</p><p>注意：<strong>test、provided 范围的依赖不可传递</strong>。</p><ul><li>直接依赖：在当前项目中通过依赖配置建立的依赖关系。</li><li>间接依赖：被资源的资源如果依赖其他依赖，当前项目间接依赖其他资源。</li></ul><div class="hint-container info"><p class="hint-container-title">直接依赖和间接依赖</p><p>项目 A 有一个 X 依赖，当项目 B 依赖项目 A 时，项目 B 同时会依赖 X。</p><p>其中 X 称为 A 的直接依赖。A 称为 B 的 直接依赖，X 称为 B 的间接依赖。</p></div><p>依赖的传递性会导致依赖冲突的问题。解决依赖冲突有几个基本的原则：</p><ul><li><p><strong>路径优先原则</strong>：当依赖中出现相同的资源时，层级越深，优先级越低；层级越浅，优先级越高</p><figure><img src="`+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>项目 A 中的依赖 Z 使用 v1.1 版本。</p></li><li><p><strong>声明优先原则</strong>：当资源在相同层级被依赖时，配置顺序靠前的覆盖配置顺序靠后的</p><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>项目 A 中的依赖 W 使用 v2.1 版本</p></li><li><p><strong>特殊优先原则</strong>：当一个 pom.xml 配置了相同资源的不同版本，后配置的会覆盖前面配置的</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目中 junit 会使用 v4.12。</p></li></ul><h3 id="排除依赖" tabindex="-1"><a class="header-anchor" href="#排除依赖" aria-hidden="true">#</a> 排除依赖</h3><p>排除依赖是指主动断开依赖的资源。</p><div class="hint-container info"><p class="hint-container-title">情景</p><p>项目 B 依赖了项目 A，项目 A 用了 junit。由于依赖具有传递性，项目 B 也依赖了 junit，但项目 B 不想依赖 junit。</p></div><p>排除依赖需要在 <code>&lt;dependency&gt;</code> 标签加入 <code>&lt;exclusions&gt;</code> 标签。在 <code>&lt;exclusions&gt;</code> 里面添加子标签 <code>&lt;exclusion&gt;</code> 。</p><p>每一个子标签 <code>&lt;exclusion&gt;</code> 里面写需要排除资源的定位，不需要指定版本号。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>project<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="可选依赖" tabindex="-1"><a class="header-anchor" href="#可选依赖" aria-hidden="true">#</a> 可选依赖</h3><p>可选依赖是指对外隐藏当前所依赖的资源。</p><div class="hint-container info"><p class="hint-container-title">情景</p><p>项目 B 依赖了项目 A，项目 A 用了 junit，但项目 A 不想被其他项目知道它用了 junit。</p></div><p>可选依赖的设置是在 <code>&lt;dependency&gt;</code> 标签内加入一个子标签 <code>&lt;optional&gt;</code>，把值设置为 <code>true</code> 。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">排除依赖和可选依赖的区别</p><p>排除依赖是主动断开间接依赖的资源，可选依赖是控制资源是否被其他项目可见。</p></div><h3 id="统一依赖版本" tabindex="-1"><a class="header-anchor" href="#统一依赖版本" aria-hidden="true">#</a> 统一依赖版本</h3><div class="hint-container info"><p class="hint-container-title">情景</p><p>项目 A 使用 Spring 的 jar 包，对于 Srping 的各个 jar 包都是 4.0.0。现在需要统一升级为 4.1.1</p></div><p>可以在 <code>&lt;properties&gt;</code> 中自定义标签统一声明版本号，然后在需要统一版本的地方，使用 <code>\${自定义标签名}</code> 引用</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.version</span><span class="token punctuation">&gt;</span></span>4.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h2><p>通过继承可以实现在子工程中沿用父工程中的配置。</p><h3 id="父工程的创建及子工程的设置" tabindex="-1"><a class="header-anchor" href="#父工程的创建及子工程的设置" aria-hidden="true">#</a> 父工程的创建及子工程的设置</h3><ul><li><p>创建父工程</p><ol><li>创建一个空的 Maven 工程，里面不需要有 src 目录，只需要有一个 pom.xml 文件即可。</li><li>修改 pom.xml 文件，把 <code>&lt;packaging&gt;</code> 标签的内容改为 <strong>pom</strong>。</li></ol></li><li><p>子工程的设置</p><ol><li><p>在子工程中用 <code>&lt;parent&gt;</code> 标签声明父工程坐标与对应位置 ( <code>&lt;relativePath&gt;</code> )</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.floli<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">&gt;</span></span>../parentProjectName/pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>子工程的 <code>&lt;groupId&gt;</code> 和 <code>&lt;version&gt;</code> 如果沿用父工程的时候，可以删除</p></li></ol></li></ul><h3 id="继承的资源" tabindex="-1"><a class="header-anchor" href="#继承的资源" aria-hidden="true">#</a> 继承的资源</h3><ul><li>groupId：项目组 ID，项目坐标的核心元素</li><li>version：项目版本，项目坐标的核心元素</li><li>description：项目的描述信息</li><li>organization：项目的组织信息</li><li>inceptionYear：项目的创始年份</li><li>url：项目的 URL 地址</li><li>developers：项目的开发者信息</li><li>contributors：项目的贡献者信息</li><li>distributionManagement：项目的部署配置</li><li>issueManagement：项目的缺陷跟踪系统信息</li><li>ciManagement：项目的持续集成系统信息</li><li>scm：项目的版本控制系统信息</li><li>malilingLists：项目的邮件列表信息</li><li>properties：自定义的 Maven 属性</li><li>dependencies：项目的依赖配置</li><li>dependencyManagement：项目的依赖管理配置</li><li>rerpositories：项目的仓库配置</li><li>build：包括项目的源码目录配置、输出目录配置、插件配置、插件管理配置</li><li>reporting：包括项目的报告输出目录配置、报告插件配置等</li></ul><h3 id="用例" tabindex="-1"><a class="header-anchor" href="#用例" aria-hidden="true">#</a> 用例</h3><h4 id="依赖继承" tabindex="-1"><a class="header-anchor" href="#依赖继承" aria-hidden="true">#</a> 依赖继承</h4><ol><li><p>在父工程中用 <code>&lt;dependencyManagement&gt;</code> 标签定义依赖管理</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 依赖坐标--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在子工程中定义依赖关系，无需声明依赖版本，版本继承父工程中的依赖版本</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 依赖坐标（不用写版本） --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果声明了版本，会覆盖掉父工程的依赖版本。</p></li></ol><h2 id="聚合" tabindex="-1"><a class="header-anchor" href="#聚合" aria-hidden="true">#</a> 聚合</h2><p>聚合用于快速构建 Maven 工程，一次性构建多个模块。</p><p>使用聚合非常简单：</p><ol><li>创建一个父工程 <ol><li>创建一个空的 Maven 工程，里面不需要有 src 目录，只需要有一个 pom.xml 文件即可。</li><li>修改 pom.xml 文件，把 <code>&lt;packaging&gt;</code> 标签的内容改为 <strong>pom</strong>。</li></ol></li><li>在父工程的 pom.xml 添加 <code>&lt;modules&gt;</code> 标签，然后在里面添加子标签 <code>&lt;moudle&gt;</code> 。每个子标签 <code>&lt;moudle&gt;</code> 里面填模块路径（ pom.xml 文件所在的文件夹路径）。</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>moudles</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>moudle</span><span class="token punctuation">&gt;</span></span>../a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>moudle</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>moudle</span><span class="token punctuation">&gt;</span></span>../b<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>moudle</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>moudle</span><span class="token punctuation">&gt;</span></span>../c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>moudle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>moudles</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：参与聚合的模块最终执行顺序与模块之间的依赖关系有关，与配置顺序无关。</strong></p><div class="hint-container tip"><p class="hint-container-title">继承与聚合的关系</p><ul><li>作用 <ul><li>继承用于快速配置</li><li>聚合用于快速构建项目</li></ul></li><li>相同点 <ul><li>继承与聚合的 pom.xml 文件打包方式都为 <strong>pom</strong>，可以将两种关系制作到同一个 pom.xml 中</li><li>继承与聚合均属于设计型模块，并无实际内容</li></ul></li><li>不同点 <ul><li>继承是在子模块中配置关系，父模块无法感知哪些子模块继承了自己</li><li>聚合是在当前模块中配置关系，聚合可以感知到参与聚合的模块有哪些</li></ul></li></ul></div><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2><p>通过插件可以自定义其他功能。</p>`,65),x={href:"https://maven.apache.org/plugins/index.html",target:"_blank",rel:"noopener noreferrer"},f=s(`<p>配置插件语法：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--构建--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--设置插件--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--具体插件--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--插件坐标--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2><p>Maven 构建生命周期描述的是一次构建过程经历了多少事件。</p><p>生命周期有3个：</p><ul><li>clean：主要做清理工作</li><li>defalut：项目构建的核心工作</li><li>site：产生报告，发布站点等</li></ul><h3 id="clean-生命周期" tabindex="-1"><a class="header-anchor" href="#clean-生命周期" aria-hidden="true">#</a> clean 生命周期</h3><ul><li>pre-clean：执行一些需要在 clean 之前完成的工作</li><li>clean：移除所有上一次构建生成的文件</li><li>post-clean：执行一些需要在 clean 之后立即完成的工作</li></ul><h3 id="default-生命周期" tabindex="-1"><a class="header-anchor" href="#default-生命周期" aria-hidden="true">#</a> default 生命周期</h3><ul><li><strong>validate</strong>（校验） 校验项目是否正确并且所有必要的信息可以完成项目的构建过程。</li><li>initialize（初始化） 初始化构建状态，比如设置属性值。</li><li>generate-sources（生成源代码） 生成包含在编译阶段中的任何源代码。</li><li>process-sources（处理源代码） 处理源代码，比如说，过滤任意值。</li><li>generate-resources（生成资源文件） 生成将会包含在项目包中的资源文件。</li><li>process-resources （处理资源文件） 复制和处理资源到目标目录，为打包阶段最好准备。</li><li><strong>compile</strong>（编译） 编译项目的源代码。</li><li>process-classes（处理类文件） 处理编译生成的文件，比如说对Java class文件做字节码改善优化。</li><li>generate-test-sources（生成测试源代码） 生成包含在编译阶段中的任何测试源代码。</li><li>process-test-sources（处理测试源代码） 处理测试源代码，比如说，过滤任意值。</li><li>generate-test-resources（生成测试资源文件） 为测试创建资源文件。</li><li>process-test-resources（处理测试资源文件） 复制和处理测试资源到目标目录。</li><li><strong>test-compile</strong>（编译测试源码） 编译测试源代码到测试目标目录.</li><li>process-test-classes（处理测试类文件） 处理测试源码编译生成的文件。</li><li><strong>test</strong>（测试） 使用合适的单元测试框架运行测试（Juint是其中之一）。</li><li>prepare-package（准备打包） 在实际打包之前，执行任何的必要的操作为打包做准备。</li><li><strong>package</strong>（打包） 将编译后的代码打包成可分发格式的文件，比如JAR、WAR或者EAR文件。</li><li>pre-integration-test（集成测试前） 在执行集成测试前进行必要的动作。比如说，搭建需要的环境。</li><li>integration-test（集成测试） 处理和部署项目到可以运行集成测试环境中。</li><li>post-integration-test（集成测试后） 在执行集成测试完成后进行必要的动作。比如说，清理集成测试环境。</li><li>verify （验证） 运行任意的检查来验证项目包有效且达到质量标准。</li><li><strong>install</strong>（安装） 安装项目包到本地仓库，这样项目包可以用作其他本地项目的依赖。</li><li><strong>deploy</strong>（部署） 将最终的项目包复制到远程仓库中与其他开发者和项目共享。</li></ul><h3 id="site-生命周期" tabindex="-1"><a class="header-anchor" href="#site-生命周期" aria-hidden="true">#</a> site 生命周期</h3><ul><li>pre-site：执行一些需要在生成站点文档之前完成的工作</li><li>site：生成项目的站点文档</li><li>post-site：执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</li><li>site-deploy：将生成的站点文档部署到特定的服务器上</li></ul><p>Maven 构建生命周期内各个阶段与插件绑定，在执行到对应生命周期时执行对应的插件功能。</p>`,13);function I(y,_){const p=e("ExternalLinkIcon"),l=e("RouterLink");return o(),i("div",null,[v,a("p",null,[n("仓库："),a("a",m,[n("https://mvnrepository.com/"),t(p)])]),h,a("p",null,[n("如果需要修改本地仓库的默认位置，参考 "),t(l,{to:"/technology/maven/faq.html"},{default:u(()=>[n("FAQ")]),_:1})]),b,a("p",null,[n("Maven plugins："),a("a",x,[n("https://maven.apache.org/plugins/index.html"),t(p)])]),f])}const A=c(k,[["render",I],["__file","00003core.html.vue"]]);export{A as default};
