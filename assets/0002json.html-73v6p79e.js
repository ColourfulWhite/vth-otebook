import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as p,c as i,a as n,b as s,d as e,e as c}from"./app-G7VSIf0C.js";const r="/assets/1710496882452-jsonobject-M_rCOF95.png",l="/assets/1710496920489-jsonarray-PFl3uA5Q.png",d="/assets/1710496941361-jsonvalue-PB_DzDwo.png",u="/assets/1710496967014-jsonstring-DSrkS9fl.png",v="/assets/1710496991859-jsonnumber-J4ZeE3HT.png",k="/assets/1710497038783-jsonwhitespace-az6oCgRF.png",h={},g=c('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>JSON (JavaScript Object Notation) 是一种轻量级的数据交换格式，基于 JavaScript Programming Language, Standard ECMA-262 3rd Edition -December 1999 的一个子集。</p><p>JSON 文件的文件类型是 <code>.json</code> 。</p><p>JSON 文本的 MIME 类型是 <code>application/json</code> 。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><h3 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h3><p>对象是一个无序的键值对 <code>key: value</code> 集合。</p><p>一个对象以左括号 <code>{</code> 开始，右括号 <code>}</code> 结束，每个键后面跟一个冒号 <code>:</code> 。每对 <code>key: value</code> 之间使用逗号 <code>,</code> 分隔。</p><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container info"><p class="hint-container-title">一个简单的 JSON 对象</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;slogan&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello World!&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><p>数组是值 (value) 的有序集合。一个数组以左括号 <code>[</code> 开始，右括号 <code>]</code> 结束。值之间使用逗号 <code>,</code> 分隔。</p><figure><img src="`+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container info"><p class="hint-container-title">JSON 数组</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
   <span class="token property">&quot;language&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;C++&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Java&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Python&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="值" tabindex="-1"><a class="header-anchor" href="#值" aria-hidden="true">#</a> 值</h3><p>值 (value) 可以是双引号括起来的字符串 (string)，数值 (number)，布尔值 (true, flase)，空值 (null)，对象 (ojbect) 或者 数组 (array)。</p><p>这些结构是可以嵌套的。</p><figure><img src="`+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h4><p>字符串 (string) 是由双引号包围的任意数量 Unicode 字符的集合，使用反斜杠 <code>\\</code> 转义。</p><p>一个字符 (character) 即一个单独的字符串 (character string) 。</p><p><strong>注：</strong> 字符串不能使用单引号，只能使用双引号。</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="数值" tabindex="-1"><a class="header-anchor" href="#数值" aria-hidden="true">#</a> 数值</h4><p>数值 (number) 可以是整数或浮点数，支持科学计数法。</p><figure><img src="'+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container info"><p class="hint-container-title">JSON 数值</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    <span class="token property">&quot;salary&quot;</span><span class="token operator">:</span> <span class="token number">199.99</span><span class="token punctuation">,</span>
    <span class="token property">&quot;distanct&quot;</span><span class="token operator">:</span> <span class="token number">1e-10</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="布尔值" tabindex="-1"><a class="header-anchor" href="#布尔值" aria-hidden="true">#</a> 布尔值</h4><p>JSON 使用 <code>true</code> 表示为真，使用 <code>false</code> 表示为假。</p><div class="hint-container info"><p class="hint-container-title">JSON 布尔值</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;man&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;girl&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="空值" tabindex="-1"><a class="header-anchor" href="#空值" aria-hidden="true">#</a> 空值</h4><p>JSON 使用 <code>null</code> 表示空值。</p><div class="hint-container info"><p class="hint-container-title">JSON 空值</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="对象-1" tabindex="-1"><a class="header-anchor" href="#对象-1" aria-hidden="true">#</a> 对象</h4><p>对象作为值的时候可以嵌套。</p><div class="hint-container info"><p class="hint-container-title">JSON 嵌套对象</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;person&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token property">&quot;birth&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;year&quot;</span><span class="token operator">:</span> <span class="token number">2000</span>
            <span class="token property">&quot;mount&quot;</span><span class="token operator">:</span> <span class="token number">12</span>
            <span class="token property">&quot;day&quot;</span><span class="token operator">:</span> <span class="token number">25</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="数组-1" tabindex="-1"><a class="header-anchor" href="#数组-1" aria-hidden="true">#</a> 数组</h4><p>数组是值的一种，数组里面的元素可以是上面提到的值的类型，且数据类型可以不一致。</p><p>数组支持嵌套。</p><div class="hint-container info"><p class="hint-container-title">JSON 数组</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;language&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C++&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;C#&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;Python&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="空白" tabindex="-1"><a class="header-anchor" href="#空白" aria-hidden="true">#</a> 空白</h4><p>空白字符可以加入到任何字符之间。</p><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h2><p>在实际应用中，需要注意几点：</p><ol><li><p>空白字符在网络传输过程中会被删掉</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个 JSON 对象在网络传输开始前会变成</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>对象的最后一个键值对以及数组最后一个元素不能添加逗号 <code>,</code></p><div class="hint-container warning"><p class="hint-container-title">错误示例</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;language&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C++&quot;</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></li></ol><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,47),m={href:"https://www.json.org/json-zh.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.runoob.com/json/json-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function q(f,j){const a=o("ExternalLinkIcon");return p(),i("div",null,[g,n("ul",null,[n("li",null,[n("a",m,[s("JSON"),e(a)])]),n("li",null,[n("a",b,[s("JSON 教程 | 菜鸟教程"),e(a)])])])])}const x=t(h,[["render",q],["__file","0002json.html.vue"]]);export{x as default};
